[{"C:\\F\\project\\reactapp\\insta-clone\\src\\index.js":"1","C:\\F\\project\\reactapp\\insta-clone\\src\\reportWebVitals.js":"2","C:\\F\\project\\reactapp\\insta-clone\\src\\App.js":"3","C:\\F\\project\\reactapp\\insta-clone\\src\\Post.js":"4","C:\\F\\project\\reactapp\\insta-clone\\src\\firebase.js":"5","C:\\F\\project\\reactapp\\insta-clone\\src\\ImageUpload.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":7528,"mtime":1608557746570,"results":"10","hashOfConfig":"8"},{"size":2764,"mtime":1608567438297,"results":"11","hashOfConfig":"8"},{"size":707,"mtime":1608125241939,"results":"12","hashOfConfig":"8"},{"size":2364,"mtime":1608391020829,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ixvo37",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\F\\project\\reactapp\\insta-clone\\src\\index.js",[],["29","30"],"C:\\F\\project\\reactapp\\insta-clone\\src\\reportWebVitals.js",[],"C:\\F\\project\\reactapp\\insta-clone\\src\\App.js",["31"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { db, auth } from './firebase';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Input} from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport {Link} from 'react-router-dom';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const[open, setOpen] = useState(false);\n  const[openSignIn, setOpenSignIn] = useState(false);\n  const[email, setEmail] = useState('');\n  const[username, setUsername] = useState('');\n  const[password, setPassword] = useState('');\n  const[user, setUser] = useState(null);  \n\n  const [posts, setPosts] = useState([]);\n \n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser){\n        // user has logged in..\n        console.log(authUser);\n        setUser(authUser);\n      }else{\n        // user has logged out..\n        setUser(null);\n      }\n    })\n    return () => {\n      // perform some cleanup actions\n      unsubscribe(); \n    }\n\n  }, [user, username]);\n\n  // useEffect: Runs a piece of code based on a specific condition\n  useEffect(() =>{\n    // this is where the code run\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot =>{\n\n      // every time a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    })\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n    setOpen(false);\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username\n        })\n      })\n      .catch((error) => alert(error.message))\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth  \n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message))\n\n    setOpenSignIn(false);\n  }\n\n\n  return (\n    <div className=\"app\">\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              {/* <Link to='/' className='navbar-logo' >\n                    CRIME-REG <i className='fab fa-typo3'/>\n              </Link> */}\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            \n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button type=\"submit\" onClick={signUp}>Sign Up</Button>   \n          </form>     \n        </div>\n        \n      </Modal>\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signin\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"\"\n              />\n            </center>\n            \n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            \n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button type=\"submit\" onClick={signIn}>Sign In</Button>   \n          </form>     \n        </div>\n        \n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"\"\n        />\n        {user ? (               \n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div  className=\"app__loginContainer\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign-In</Button>\n            <Button onClick={() => setOpen(true)}>Sign-Up</Button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {\n            posts.map(({id, post}) => (\n            <Post key ={id} postId={id} user={user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} />\n            ))\n          }\n        </div>\n        <div className=\"app__postsRight\">\n          <h4>Right side Div...</h4>\n            <p> JDS leader HD Kumaraswamy on rumours of the party's merger with BJP</p>\n            <p>\"Our party is not going to merge with any other national or regional party.\"</p>\n            <p>12:37 PM</p>\n            <p>Russia Deputy Envoy Roman N. Babushkin on cooperation between India and Russia regarding Afghanistan peace process</p>\n            <p>We're maintaining a close dialogue on Afghanistan...We have the Moscow platform for same. Then, we have of course bilateral consultations with India on Afghanistan</p>\n            <p>12:20 PM</p>\n            <p>No significant impact on company, says Wistron on iPhone manufacturing plant violence in Karnataka</p>\n            <p>12:19 PM</p>\n            <p>Russian Ambassador to India Nikolay R Kudashev on US imposing sanctions on Turkey over Russian S-400 missiles purchase</p>\n            <p>We don't welcome unilateral sanctions as tool for international relations. India's position is also crystal clear-no sanctions other than those applied by UNSC.</p>\n     \n          <InstagramEmbed\n            url='https://www.instagram.com/p/B_uf9dmAGPw/'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>     \n\n      <div className=\"app__imageupload\">\n        {user?.displayName? (\n          <ImageUpload username ={user.displayName}/>\n        ):\n        (\n          <h4 className=\"app__imageuploadH\">Sorry you need to login to upload</h4>\n        )}  \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\F\\project\\reactapp\\insta-clone\\src\\Post.js",["32"],"C:\\F\\project\\reactapp\\insta-clone\\src\\firebase.js",[],"C:\\F\\project\\reactapp\\insta-clone\\src\\ImageUpload.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":9,"column":9,"nodeType":"41","messageId":"42","endLine":9,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":48,"column":13,"nodeType":"45","endLine":48,"endColumn":84},{"ruleId":"35","replacedBy":"46"},{"ruleId":"37","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["48"],["49"],"no-global-assign","no-unsafe-negation"]